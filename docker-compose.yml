version: '3.8'
services:
  eureka-server:
    container_name: eureka-server
    build: ./eureka-server
    ports:
      - "8761:8761"
    networks:
      - euraka-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
  api-gateway:
    container_name: api-gateway
    build: ./api-gateway
    env_file:
      - ./api-gateway/src/main/resources/application.properties
    links:
      - eureka-server
    networks:
      - euraka-network
    depends_on:
      - eureka-server
    environment:
      - eureka.client.service-url.defaultZone=http://host.docker.internal:8761/eureka/
    ports:
      - "127.0.0.1:8080:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
  account-service:
    container_name: account-service
    build: ./account-service
    ports:
      - "8763:8763"
    depends_on:
      - PostgreSQL
      - eureka-server
    links:
      - PostgreSQL
      - eureka-server
    networks:
      - euraka-network
      - postgre-network
    environment:
      - eureka.client.service-url.defaultZone=http://host.docker.internal:8761/eureka/
      - spring.datasource.url=jdbc:postgresql://PostgreSQL:5432/account-service?createDatabaseIfNotExist=true
      - spring.datasource.username=postgres
      - spring.datasource.password=sent1234
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.generate-ddl=true
      - spring.datasource.driver-class-name=org.postgresql.Driver
      - hibernate.hbm2ddl.auto=create
      - spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
    extra_hosts:
      - "host.docker.internal:host-gateway"
  customer-service:
    container_name: customer-service
    build: ./customer-service
    ports:
      - "8762:8762"
    depends_on:
      - PostgreSQL
      - eureka-server
    links:
      - PostgreSQL
      - eureka-server
    networks:
      - euraka-network
      - postgre-network
    environment:
      - eureka.client.service-url.defaultZone=http://host.docker.internal:8761/eureka/
      - spring.datasource.url=jdbc:postgresql://PostgreSQL:5432/account-service?createDatabaseIfNotExist=true
      - spring.datasource.username=postgres
      - spring.datasource.password=sent1234
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.generate-ddl=true
      - spring.datasource.driver-class-name=org.postgresql.Driver
      - hibernate.hbm2ddl.auto=create
      - spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
    extra_hosts:
      - "host.docker.internal:host-gateway"
  transaction-service:
    container_name: transaction-service
    build: ./transaction-service
    ports:
      - "8764:8764"
    depends_on:
      - PostgreSQL
      - eureka-server
    links:
      - PostgreSQL
      - eureka-server
    networks:
      - euraka-network
      - postgre-network
    environment:
      - eureka.client.service-url.defaultZone=http://host.docker.internal:8761/eureka/
      - spring.datasource.url=jdbc:postgresql://PostgreSQL:5432/transaction-service?createDatabaseIfNotExist=true
      - spring.datasource.username=postgres
      - spring.datasource.password=sent1234
      - spring.jpa.hibernate.ddl-auto=update
      - spring.jpa.generate-ddl=true
      - spring.datasource.driver-class-name=org.postgresql.Driver
      - hibernate.hbm2ddl.auto=create
      - spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

    extra_hosts:
      - "host.docker.internal:host-gateway"
  PostgreSQL:
    container_name: PostgreSQL
    image: postgres:15
    ports:
      - "5432:5432"
    networks:
      - postgre-network
    environment:
      - POSTGRES_PASSWORD=sent1234
      - POSTGRES_USER=postgres
      - PG_DATA=/var/lib/postgres/data
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - postgres:/var/lib/postgres/data
networks:
  euraka-network:
    name: eureka-network
    driver: bridge
  postgre-network:
    name: postgre-network
    driver: bridge
volumes:
  postgres:
